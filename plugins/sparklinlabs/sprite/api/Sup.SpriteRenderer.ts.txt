module Sup {
  let materialTypes = ["basic", "phong"];

  export class SpriteRenderer extends Sup.ActorComponent {
    constructor(actor, asset, materialIndex) {
      super(actor);
      this.__inner = new SupEngine.componentClasses.SpriteRenderer(this.actor.__inner);
      if (asset != null) {
        this.__inner.opacity = asset.__inner.opacity;
        this.setSprite(asset, materialIndex);
      }
      this.__inner.__outer = this;
      this.actor.spriteRenderer = this;
    }
    destroy() {
      this.actor.spriteRenderer = null;
      super.destroy();
    }

    getSprite() { return (this.__inner.asset != null) ? this.__inner.asset.__outer : null; }
    setSprite(asset, materialIndex) {
      let material: string;
      if (materialIndex != null) material = materialTypes[materialIndex];
      this.__inner.setSprite((asset != null) ? asset.__inner : null, material);
      return this;
    }
    getMaterialType() { return materialTypes.indexOf(this.__inner.materialType); }
    setHorizontalFlip(horizontalFlip) { this.__inner.setHorizontalFlip(horizontalFlip); return this; }
    getHorizontalFlip() { return this.__inner.horizontalFlip; }
    setVerticalFlip(verticalFlip) { this.__inner.setVerticalFlip(verticalFlip); return this; }
    getVerticalFlip() { return this.__inner.verticalFlip; }
    getOpacity() { return this.__inner.opacity; }
    setOpacity(opacity) { this.__inner.setOpacity(opacity); return this; }
    getColor() { return new Color(this.__inner.color.r, this.__inner.color.g, this.__inner.color.b); }
    setColor(r, g, b) {
      if (g == null && b == null) {
        let color = r;
        this.__inner.color.r = color.r;
        this.__inner.color.g = color.g;
        this.__inner.color.b = color.b;
      } else {
        this.__inner.color.r = r;
        this.__inner.color.g = g;
        this.__inner.color.b = b;
      }
      this.__inner.threeMesh.material.color.setRGB(this.__inner.color.r, this.__inner.color.g, this.__inner.color.b);
      return this;
    }

    setAnimation(animationName, looping) { this.__inner.setAnimation(animationName, looping); return this; }
    getAnimation() { return this.__inner.getAnimation() }
    setAnimationTime(time) { this.__inner.setAnimationTime(time); return this; }
    getAnimationTime() { return this.__inner.getAnimationTime() }
    getAnimationDuration() { return this.__inner.getAnimationDuration() }

    isAnimationPlaying() { return this.__inner.isAnimationPlaying }
    playAnimation(looping) { this.__inner.playAnimation(looping); return this }
    pauseAnimation() { this.__inner.pauseAnimation(); return this }
    stopAnimation() { this.__inner.stopAnimation(); return this }
    
    getUniforms() { return this.__inner.material.uniforms; }
  }

  export module SpriteRenderer {
    export enum MaterialType { Basic, Phong };
  }
}
